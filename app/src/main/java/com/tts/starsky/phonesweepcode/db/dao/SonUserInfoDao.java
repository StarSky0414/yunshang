//package com.tts.starsky.phonesweepcode.db.dao;
//
//import android.database.Cursor;
//import android.database.sqlite.SQLiteStatement;
//
//import org.greenrobot.greendao.AbstractDao;
//import org.greenrobot.greendao.Property;
//import org.greenrobot.greendao.internal.DaoConfig;
//import org.greenrobot.greendao.database.Database;
//import org.greenrobot.greendao.database.DatabaseStatement;
//
////import com.tts.starsky.phonesweepcode.db.bean.SonUserInfo;
//
//// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
///**
// * DAO for table "SON_USER_INFO".
//*/
//public class SonUserInfoDao extends AbstractDao<SonUserInfo, Long> {
//
//    public static final String TABLENAME = "SON_USER_INFO";
//
//    /**
//     * Properties of entity SonUserInfo.<br/>
//     * Can be used for QueryBuilder and for referencing column names.
//     */
//    public static class Properties {
//        public final static Property _id = new Property(0, long.class, "_id", true, "_id");
//        public final static Property UserPhoto = new Property(1, String.class, "userPhoto", false, "USER_PHOTO");
//        public final static Property Account = new Property(2, String.class, "account", false, "ACCOUNT");
//        public final static Property UserName = new Property(3, String.class, "userName", false, "USER_NAME");
//        public final static Property PassWord = new Property(4, String.class, "passWord", false, "PASS_WORD");
//        public final static Property Descri = new Property(5, String.class, "descri", false, "DESCRI");
//        public final static Property Sign = new Property(6, String.class, "sign", false, "SIGN");
//        public final static Property Name = new Property(7, String.class, "name", false, "NAME");
//        public final static Property Age = new Property(8, String.class, "age", false, "AGE");
//        public final static Property Birthday = new Property(9, String.class, "birthday", false, "BIRTHDAY");
//    }
//
//
//    public SonUserInfoDao(DaoConfig config) {
//        super(config);
//    }
//
//    public SonUserInfoDao(DaoConfig config, DaoSession daoSession) {
//        super(config, daoSession);
//    }
//
//    /** Creates the underlying database table. */
//    public static void createTable(Database db, boolean ifNotExists) {
//        String constraint = ifNotExists? "IF NOT EXISTS ": "";
//        db.execSQL("CREATE TABLE " + constraint + "\"SON_USER_INFO\" (" + //
//                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ," + // 0: _id
//                "\"USER_PHOTO\" TEXT," + // 1: userPhoto
//                "\"ACCOUNT\" TEXT," + // 2: account
//                "\"USER_NAME\" TEXT," + // 3: userName
//                "\"PASS_WORD\" TEXT," + // 4: passWord
//                "\"DESCRI\" TEXT," + // 5: descri
//                "\"SIGN\" TEXT," + // 6: sign
//                "\"NAME\" TEXT," + // 7: name
//                "\"AGE\" TEXT," + // 8: age
//                "\"BIRTHDAY\" TEXT);"); // 9: birthday
//    }
//
//    /** Drops the underlying database table. */
//    public static void dropTable(Database db, boolean ifExists) {
//        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SON_USER_INFO\"";
//        db.execSQL(sql);
//    }
//
//    @Override
//    protected final void bindValues(DatabaseStatement stmt, SonUserInfo entity) {
//        stmt.clearBindings();
//        stmt.bindLong(1, entity.get_id());
//
//        String userPhoto = entity.getUserPhoto();
//        if (userPhoto != null) {
//            stmt.bindString(2, userPhoto);
//        }
//
//        String account = entity.getAccount();
//        if (account != null) {
//            stmt.bindString(3, account);
//        }
//
//        String userName = entity.getUserName();
//        if (userName != null) {
//            stmt.bindString(4, userName);
//        }
//
//        String passWord = entity.getPassWord();
//        if (passWord != null) {
//            stmt.bindString(5, passWord);
//        }
//
//        String descri = entity.getDescri();
//        if (descri != null) {
//            stmt.bindString(6, descri);
//        }
//
//        String sign = entity.getSign();
//        if (sign != null) {
//            stmt.bindString(7, sign);
//        }
//
//        String name = entity.getName();
//        if (name != null) {
//            stmt.bindString(8, name);
//        }
//
//        String age = entity.getAge();
//        if (age != null) {
//            stmt.bindString(9, age);
//        }
//
//        String birthday = entity.getBirthday();
//        if (birthday != null) {
//            stmt.bindString(10, birthday);
//        }
//    }
//
//    @Override
//    protected final void bindValues(SQLiteStatement stmt, SonUserInfo entity) {
//        stmt.clearBindings();
//        stmt.bindLong(1, entity.get_id());
//
//        String userPhoto = entity.getUserPhoto();
//        if (userPhoto != null) {
//            stmt.bindString(2, userPhoto);
//        }
//
//        String account = entity.getAccount();
//        if (account != null) {
//            stmt.bindString(3, account);
//        }
//
//        String userName = entity.getUserName();
//        if (userName != null) {
//            stmt.bindString(4, userName);
//        }
//
//        String passWord = entity.getPassWord();
//        if (passWord != null) {
//            stmt.bindString(5, passWord);
//        }
//
//        String descri = entity.getDescri();
//        if (descri != null) {
//            stmt.bindString(6, descri);
//        }
//
//        String sign = entity.getSign();
//        if (sign != null) {
//            stmt.bindString(7, sign);
//        }
//
//        String name = entity.getName();
//        if (name != null) {
//            stmt.bindString(8, name);
//        }
//
//        String age = entity.getAge();
//        if (age != null) {
//            stmt.bindString(9, age);
//        }
//
//        String birthday = entity.getBirthday();
//        if (birthday != null) {
//            stmt.bindString(10, birthday);
//        }
//    }
//
//    @Override
//    public Long readKey(Cursor cursor, int offset) {
//        return cursor.getLong(offset + 0);
//    }
//
//    @Override
//    public SonUserInfo readEntity(Cursor cursor, int offset) {
//        SonUserInfo entity = new SonUserInfo( //
//            cursor.getLong(offset + 0), // _id
//            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // userPhoto
//            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // account
//            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // userName
//            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // passWord
//            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // descri
//            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // sign
//            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // name
//            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // age
//            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // birthday
//        );
//        return entity;
//    }
//
//    @Override
//    public void readEntity(Cursor cursor, SonUserInfo entity, int offset) {
//        entity.set_id(cursor.getLong(offset + 0));
//        entity.setUserPhoto(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
//        entity.setAccount(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
//        entity.setUserName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
//        entity.setPassWord(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
//        entity.setDescri(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
//        entity.setSign(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
//        entity.setName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
//        entity.setAge(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
//        entity.setBirthday(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
//     }
//
//    @Override
//    protected final Long updateKeyAfterInsert(SonUserInfo entity, long rowId) {
//        entity.set_id(rowId);
//        return rowId;
//    }
//
//    @Override
//    public Long getKey(SonUserInfo entity) {
//        if(entity != null) {
//            return entity.get_id();
//        } else {
//            return null;
//        }
//    }
//
//    @Override
//    public boolean hasKey(SonUserInfo entity) {
//        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
//    }
//
//    @Override
//    protected final boolean isEntityUpdateable() {
//        return true;
//    }
//
//}
